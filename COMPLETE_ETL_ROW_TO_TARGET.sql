DROP TABLE RAW_OM_EMPLOYEE_ZORBA
CREATE TABLE RAW_OM_EMPLOYEE_ZORBA
(
 EMP_ID INT,
 EMP_NAME NVARCHAR(20),
 SALARY FLOAT,
 FILE_ID INT
)

SELECT * FROM RAW_OM_EMPLOYEE_ZORBA


----------stage
DROP TABLE stg_OM_EMPLOYEE_ZORBA
CREATE TABLE stg_OM_EMPLOYEE_ZORBA
(
 Serial_num int IDENTITY(1,1),
 EMP_ID INT,
 EMP_NAME NVARCHAR(20),
 SALARY FLOAT,
 FILE_ID INT,
 LOAD_DATE DATETIME
)

SELECT * FROM RAW_OM_EMPLOYEE_ZORBA
SELECT * FROM stg_OM_EMPLOYEE_ZORBA

TRUNCATE TABLE stg_OM_EMPLOYEE_ZORBA

DROP PROC OM_RAW_STAGE_LOAD
GO
CREATE PROC OM_RAW_STAGE_LOAD
AS
BEGIN

INSERT INTO stg_OM_EMPLOYEE_ZORBA  (EMP_ID, EMP_NAME, SALARY, FILE_ID, LOAD_DATE)


SELECT 
 EMP_ID, 
 UPPER(LTRIM(RTRIM(EMP_NAME))), 
 CONVERT(DECIMAL (6, 2), SALARY),
 FILE_ID,
 GETDATE()
FROM RAW_OM_EMPLOYEE_ZORBA

END

EXEC OM_RAW_STAGE_LOAD

--TO LOG FILENAME
DROP TABLE OM_LOG_FILENAME
CREATE TABLE OM_LOG_FILENAME
(
 FILENAME_ID INT IDENTITY(1,1),
 FILE_NAME VARCHAR(100) PRIMARY KEY,
 LOAD_DTM DATETIME  
)

DROP PROC OM_LOG_FILE_NAME
go

CREATE PROCEDURE OM_LOG_FILE_NAME @FILENAME VARCHAR(100)
AS
BEGIN
	INSERT INTO OM_LOG_FILENAME (FILE_NAME, LOAD_DTM)
	VALUES (@FILENAME, GETDATE())

END

EXEC OM_LOG_FILE_NAME 'RAM1.ABC'

SELECT * FROM OM_LOG_FILENAME


TRUNCATE TABLE stg_OM_EMPLOYEE_ZORBA
TRUNCATE TABLE OM_LOG_FILENAME

-------------------
SELECT * FROM stg_OM_EMPLOYEE_ZORBA
SELECT * FROM OM_LOG_FILENAME
SELECT * FROM RAW_OM_EMPLOYEE_ZORBA


--MODIFY STORE PROCEDURE
ALTER PROCEDURE OM_LOG_FILE_NAME @FILENAME VARCHAR(100), @FILE_ID INT OUTPUT
AS
BEGIN
INSERT INTO OM_LOG_FILENAME (FILE_NAME, LOAD_DTM)
VALUES (@FILENAME, GETDATE())

SET @FILE_ID = ( SELECT  MAX(FILENAME_ID) FROM OM_LOG_FILENAME)
END

declare @variabletoholdoutputvalue int  -- datatype of output parameter need to match 
exec OM_LOG_FILE_NAME 'emFp' , @variabletoholdoutputvalue out  -- you can use out or output
select @variabletoholdoutputvalue






----TARGET
DROP TABLE TRG_OM_EMPLOYEE_ZORBA
CREATE TABLE TRG_OM_EMPLOYEE_ZORBA
(
 Serial_num int IDENTITY(1,1),
 EMP_ID INT,
 EMP_NAME NVARCHAR(20),
 SALARY FLOAT,
 LOAD_DATE DATETIME,
 UPDATE_DATE DATETIME
)

SELECT * FROM stg_OM_EMPLOYEE_ZORBA

GO


--THIS IF FINAL QUERY
ALTER PROC OM_MERGE_TARGET @V_FILE_ID INT
AS
BEGIN

SELECT *, ROW_NUMBER() OVER (PARTITION BY EMP_ID, EMP_NAME ORDER BY SALARY DESC)  CNT
INTO #TEMP_DUP
FROM stg_OM_EMPLOYEE_ZORBA WHERE FILE_ID = @V_FILE_ID

SELECT SERIAL_NUM, EMP_ID, EMP_NAME, SALARY, LOAD_DATE INTO #FINAL_STAGE FROM #TEMP_DUP WHERE CNT = 1


MERGE TRG_OM_EMPLOYEE_ZORBA T
USING #FINAL_STAGE S
ON T.EMP_ID = S.EMP_ID 
	WHEN MATCHED THEN                         
	UPDATE
	SET 
	T.EMP_NAME = S.EMP_NAME,
    T.SALARY = S.SALARY,
	T.UPDATE_DATE = GETDATE()

    WHEN NOT MATCHED BY TARGET  --  "BY TARGET" BY DEFAULT 
	THEN
	INSERT (EMP_ID, EMP_NAME, SALARY, LOAD_DATE, UPDATE_DATE)
	Values (S.EMP_ID, S.EMP_NAME, S.SALARY, S.LOAD_DATE, GETDATE());

END
---------------------------------------
SELECT * FROM RAW_OM_EMPLOYEE_ZORBA
SELECT * FROM stg_OM_EMPLOYEE_ZORBA
SELECT * FROM TRG_OM_EMPLOYEE_ZORBA

TRUNCATE TABLE TRG_OM_EMPLOYEE_ZORBA
TRUNCATE TABLE stg_OM_EMPLOYEE_ZORBA
TRUNCATE TABLE OM_LOG_FILENAME



----(WHEN NOT MATCHED BY SOURCE ) merge, with match by source then delete.
--THIS IF FINAL QUERY
ALTER PROC OM_MERGE_TARGET @V_FILE_ID INT
AS
BEGIN

SELECT *, ROW_NUMBER() OVER (PARTITION BY EMP_ID, EMP_NAME ORDER BY SALARY DESC)  CNT
INTO #TEMP_DUP
FROM stg_OM_EMPLOYEE_ZORBA WHERE FILE_ID = @V_FILE_ID

SELECT SERIAL_NUM, EMP_ID, EMP_NAME, SALARY, LOAD_DATE INTO #FINAL_STAGE FROM #TEMP_DUP WHERE CNT = 1


MERGE TRG_OM_EMPLOYEE_ZORBA T
USING #FINAL_STAGE S
ON T.EMP_ID = S.EMP_ID 
WHEN MATCHED THEN                         
  UPDATE
  SET 
  T.EMP_NAME = S.EMP_NAME,
  T.SALARY = S.SALARY,
  T.UPDATE_DATE = GETDATE()

WHEN NOT MATCHED BY TARGET  --  "BY TARGET" BY DEFAULT 
	THEN
INSERT (EMP_ID, EMP_NAME, SALARY, LOAD_DATE, UPDATE_DATE)
Values (S.EMP_ID, S.EMP_NAME, S.SALARY, S.LOAD_DATE, GETDATE())

WHEN NOT MATCHED BY SOURCE -- IT MEAN RECORD IS IN TARGET BUT NOT IN SOURCE
	THEN 
DELETE
;

END

select count(*) from bqa.dbo.t_medical_claim

---------------------------------------
SELECT * FROM RAW_OM_EMPLOYEE_ZORBA
SELECT * FROM stg_OM_EMPLOYEE_ZORBA
SELECT * FROM TRG_OM_EMPLOYEE_ZORBA

TRUNCATE TABLE TRG_OM_EMPLOYEE_ZORBA
TRUNCATE TABLE stg_OM_EMPLOYEE_ZORBA
TRUNCATE TABLE  OM_LOG_FILENAME

select * from OM_LOG_FILENAME



