TRIGGER: DATA MANIPULATION LANGUAGE. TYPE OF PROCEDURE ONLY DIFFERENCE 
IS IT is attached to a table OR VIEW and is only fired when an INSERT, UPDATE or DELETE occurs.

A trigger is a special type of stored procedure that is fired 
when a specific type of data modification is made 
against a specific table or column.

INSERT, DELETE, UPDATE
IT EFFECT table OR VIEW

---------------------------------------------
DROP TABLE OM_STOCK

CREATE TABLE OM_STOCK
(
 ITEM_ID INT,
 ITEM_NAME VARCHAR(20),
 ITEM_QTY INT
)

INSERT INTO OM_STOCK VALUES (1,'PEN',30),(2,'MOUNT',29),(3,'PENCIL',45),(4,'LAPTOP',23)

SELECT * FROM OM_STOCK
----------------------------------------------------
--Example 1
DROP TRIGGER trgTest

create TRIGGER trgTest
on OM_STOCK
AFTER INSERT , UPDATE , DELETE ---in
AS
BEGIN
	SELECT 'TESTING TRIGGER'
	SELECT * FROM OM_STOCK
END

INSERT INTO OM_STOCK VALUES (5,'TEST RECORD',30)

UPDATE OM_STOCK SET ITEM_NAME = 'UPDATING VALUE' WHERE ITEM_ID = 5

DELETE FROM OM_STOCK WHERE ITEM_ID = 5

--example 2
--instead of trigger
DROP TRIGGER trgInstTrigger
CREATE TRIGGER trgInstTrigger
ON OM_STOCK
INSTEAD OF INSERT
AS
BEGIN
	RAISERROR ('NO INSERT CAN BE DONE', 16, 1)
END

INSERT INTO OM_STOCK VALUES (5,'TEST RECORD',30)
	SELECT * FROM OM_STOCK

--EXAMPLE 3 (CONCEPT OF INSERTED AND DELETED TABLE)
--INSERTED AND DELTED
DROP TRIGGER trgTestinserted
CREATE TRIGGER trgTestinserted
on OM_STOCK
AFTER INSERT
AS
BEGIN
	SELECT * FROM INSERTED
END

INSERT INTO OM_STOCK VALUES (5,'TEST RECORD',30)
SELECT * FROM OM_STOCK 


--UPDATE OM_STOCK SET ITEM_NAME = 'UPDATING VALUE' WHERE ITEM_ID = 3

--DELETE FROM OM_STOCK WHERE ITEM_ID = 3


--deleted example
create table omtest1
(
 ITEM_ID INT,
 ITEM_NAME VARCHAR(20),
 ITEM_QTY INT
)

DROP TRIGGER trgTestDeleted
CREATE TRIGGER trgTestDeleted
on OM_STOCK
AFTER DELETE
AS
BEGIN
	SELECT * FROM DELETED
	
	insert into omtest1
	select * from deleted
	
END


DELETE FROM  OM_STOCK WHERE ITEM_ID = 5

SELECT * FROM OM_STOCK 
select * from omtest1

--example 4, as check constraint.
CREATE TRIGGER trgNOnegativeQty
ON OM_STOCK
AFTER INSERT
AS
BEGIN
	DECLARE @T1 INT
	SELECT @T1 = ITEM_QTY FROM INSERTED
	IF @T1 > 0
		BEGIN
			PRINT 'RECORD INSERTED'
		END
		ELSE
		BEGIN
			ROLLBACK TRANSACTION
		END
END


INSERT INTO OM_STOCK VALUES (6,'TEST RECORD',5)
SELECT * FROM OM_STOCK 


--example of sales


DROP TABLE OM_SALE

CREATE TABLE OM_SALE
(
 ITEM_ID INT,
 ITEM_NAME VARCHAR(20),
 ITEM_QTY INT
)

SELECT * FROM OM_STOCK WHERE ITEM_ID = 19

drop trigger trgOM_SALE

CREATE TRIGGER trgOM_SALE
ON OM_SALE
AFTER INSERT 
AS
BEGIN
	DECLARE @ITEM_ID INT
	SELECT @ITEM_ID = ITEM_ID FROM INSERTED
	IF EXISTS (SELECT * FROM OM_STOCK WHERE ITEM_ID = @ITEM_ID)
	BEGIN
		DECLARE @QTY_SOLD INT
		SELECT @QTY_SOLD = ITEM_QTY FROM INSERTED

				
		UPDATE OM_STOCK
		SET ITEM_QTY = ITEM_QTY - @QTY_SOLD
		WHERE ITEM_ID = @ITEM_ID
	END

	ELSE
	BEGIN
		PRINT 'ITEM IS NOT EXIST IN OM_STOCK TABLE SO YOU CANNOT INSERT'
		ROLLBACK TRANSACTION
	END
END


SELECT * FROM OM_STOCK
INSERT INTO OM_SALE VALUES (2,'PEN',10,2,'MOUNT',29),(3,'PENCIL',45),(4,'LAPTOP',23)


SELECT * FROM OM_SALE
SELECT * FROM OM_STOCK

truncate table om_sale




ALTER TRIGGER trgOM_SALE
ON OM_SALE
AFTER INSERT 
AS
BEGIN
	DECLARE @ITEM_ID INT
	SELECT @ITEM_ID = ITEM_ID FROM INSERTED
	IF EXISTS (SELECT * FROM OM_STOCK WHERE ITEM_ID = @ITEM_ID)
	BEGIN
		DECLARE @QTY_SOLD INT
		SELECT @QTY_SOLD = ITEM_QTY FROM INSERTED
		
		DECLARE @QTY_STOCK INT
		SELECT @QTY_STOCK = ITEM_QTY FROM OM_STOCK WHERE ITEM_ID = @ITEM_ID

		IF @QTY_STOCK > @QTY_SOLD
		BEGIN

		UPDATE OM_STOCK
		SET ITEM_QTY = ITEM_QTY - @QTY_SOLD
		WHERE ITEM_ID = @ITEM_ID
		END
		ELSE
		BEGIN
			PRINT 'TRYING TO SALE MORE THAN STOCK ITEM'
			ROLLBACK TRAN

		END
	END

	ELSE
	BEGIN
		PRINT 'ITEM IS NOT EXIST IN OM_STOCK TABLE SO YOU CANNOT INSERT'
		ROLLBACK TRANSACTION
	END
END
