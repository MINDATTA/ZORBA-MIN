
DROP TABLE OM_STUDENT	
CREATE TABLE OM_STUDENT	
(
SID VARCHAR(20),
SNAME VARCHAR(25),
GENDER VARCHAR(15),
CITY VARCHAR(25),
DOB DATE,
CID VARCHAR(20), 
SCORE INT
)

INSERT INTO OM_STUDENT VALUES
('S01','RAM THAPA','M','IRVING','1/23/1982','MATH1314',79),
('S02','SUMAN KARKI','M','EULESS','10/12/1970','MATH2305',99),
('S03','SUBASH KARKI','M','ARLINGTON','6/25/1985','POFT1301',45),
('S04','ANJILA SHRESTHA','F','IRVING','1/26/1988','ARTS1301',78),
('S05','JOYA SHARMA','F','IRVING','5/8/1962','MATH1314',89),
('S06','BABA SHARMA','F','IRVING','1/28/1982','MATH2305',90),
('S07','YUNISH RAI','M','ARLINGTON','2/21/1975','POFT1301',95),
('S08','BOBBY MAHARAJAN','F','ARLINGTON','2/22/1976','ARTS1301',34),
('S09','KAMAL THAPA','M','EULESS','12/23/1977','PHYS1401',67),
('S10','RUSS KARKI','M','EULESS','4/9/1981','BIOL1322',66),
('S11','BINAYA BASNET','M','ARLINGTON','12/10/1981','MATH1314',89),
('S12','SUJAN SHRESTHA','M','EULESS','4/11/1972','MATH2305',92),
('S13','KRISHNA SHRESTHA','M','IRVING','7/23/1984','POFT1301',56),
('S14','ANISH SHARMA','M','IRVING','3/5/1982','ARTS1301',	67),
('S15','ASHISH MAHARAJAN','M','IRVING','11/6/1982','PHYS1401',70),
('S16','PRIYANKA KARKI','F','EULESS','2/7/1980','MATH1314',45),
('S17','ANGEL SHAH','F','EULESS','9/8/1980','MATH2305',84),
('S18','ERIKA SHAH','F','EULESS','7/21/1982','POFT1301',78),
('S19','SUMEET SHAH','M','ARLINGTON','7/22/1969','ARTS1301',44),
('S20','RABI MAHARAJAN','M','EULESS','7/23/1979','PHYS1401',63),
('S21','SHRISTI MAHARAJAN','F','ARLINGTON','5/24/1970','BIOL1322',12),
('S22','DILIP MAHARAJAN','M','EULESS','7/25/1975','HIST1301',90),
('S23','BINA SHAH','F','ARLINGTON','2/14/1976','GOVT2304',78),
('S24','REEMA RAI','F','EULESS','8/15/1971','MATH1314',45),
('S25','VIJAYA RAI','M','IRVING','6/25/1985','MATH2305',78),
('S26','AMBIKA PUN','F','EULESS','1/26/1988','POFT1301',93),
('S27','BHUBAN RAI','M','IRVING','5/8/1962','ARTS1301',55),
('S28','SANGITA SHRESTHA','F','IRVING','1/28/1982','PHYS1401',62),
('S29','TONY SMITH','M','IRVING','2/21/1975','BIOL1322',34),
('S30','JEENA PUN','F','IRVING','2/22/1976','HIST1301',77)
						
SELECT * FROM OM_STUDENT




DROP TABLE OM_TEACHER
CREATE TABLE OM_TEACHER	
(
TID VARCHAR(20),
TNAME VARCHAR(20),
JOB_START_DT DATE,
COURSE_START_DT DATE,
CID VARCHAR(20)
)			

INSERT INTO OM_TEACHER VALUES
('T01','REEMA RAI','12/10/1981','5/15/2018','MATH1314'),
('T02','WINSON RANA','4/11/1972','5/16/2018','MATH2305'),
('T03','SABIN GAUTAM','7/23/1984','5/20/2018','POFT1301'),
('T04','KAMAL SATYAL','3/5/1982','5/24/2018','ARTS1301'),
('T05','RABINDRA NATH TEGOR','11/6/1982','5/28/2018','PHYS1401'),
('T06','JACKY CHANG','2/7/1980','6/1/2018','BIOL1322'),
('T07','PETER GURUNG','9/8/1980','6/5/2018','HIST1301'),
('T08','TIKA GURUNG','7/21/1982','6/9/2018','GOVT2304'),
('T09','DILIP SHRESTHA','4/11/1972','5/15/2018','MATH1314'),
('T10','BISHNU PARAJULI','7/23/1984','5/16/2018','MATH2305'),
('T11','KRIPASH SHRESTHA','3/5/1982','5/20/2018','POFT1301'),
('T12','SURESH SHRESTHA','11/6/1982','5/24/2018','ARTS1301'),
('T13','ASHOK GAUTAM','2/7/1980','5/28/2018','PHYS1401'),
('T14','SRIJANA SHRESTHA','8/15/1971','6/1/2018','BIOL1322'),
('T15','ANJULA GURUNG','6/25/1985','6/5/2018','HIST1301'),
('T16','SANJEEV RAI','7/25/1975','6/9/2018','GOVT2304')

SELECT * FROM OM_TEACHER


DROP TABLE OM_COURSE
CREATE TABLE OM_COURSE
(
CID VARCHAR(20),
CNAME VARCHAR(45),
FEE MONEY,
DURATION_MONTH INT
)

INSERT INTO OM_COURSE VALUES
('MATH1314','COLLEGE ALGEBRA','1356.3',5),
('MATH2305','DISCRETE MATHEMATICS','2345.56',6),
('POFT1301','BUSINESS ENGLISH','450.4',4),
('ARTS1301','ART APPRECIATION','670',5),
('PHYS1401','COLLEGE PHYSICS I','800.12',5),
('BIOL1322','NUTRITION AND DIET THERAPHY','4500.6',8),
('HIST1301','UNITED STATES HISTORY I','23.45',1),
('GOVT2304','INTRODUCTION TO POLITICAL SCIENCE','456.9',2)
			
SELECT * FROM OM_COURSE



--1	DISPLAY HOW MANY ARE MALE AND HOW MANY ARE FEMALE STUDENT?	

SELECT * FROM OM_STUDENT

SELECT GENDER,
COUNT(CASE WHEN GENDER='M' THEN 1  END) AS MALE,
COUNT(CASE WHEN GENDER='F' THEN 1  END) AS FEMALE,
COUNT(*) AS TOTAL
FROM OM_STUDENT GROUP BY GENDER

--2	DISPLAY STUDENTNAME, AGE OF STUDENT

SELECT SNAME, 		
DATEDIFF(YY,DOB,GETDATE()) AS AGE_OF_STUDENT
FROM OM_STUDENT

--3	COUNT NUMBER OF STUDENT IN EACH COURSE FROM STUDENT TABLE?	

SELECT * FROM OM_STUDENT
SELECT CID AS EACH_COURSE, COUNT(SNAME) AS NO_OF_STUDENT FROM OM_STUDENT GROUP BY CID

--4	COUNT NUMBER OF STUDENT BASE ON CITY?	
SELECT CITY, COUNT(SNAME) AS NO_OF_STUDENT FROM OM_STUDENT GROUP BY CITY

--5	COUNT NUMBER OF STUDNET BASE ON CITY AND GENDER?
SELECT CITY, GENDER, COUNT(SNAME) AS NO_OF_STUDENT FROM OM_STUDENT GROUP BY CITY,GENDER

--6	DISPLAY HIGHEST SCORE IN EACH COURSE?	

SELECT * FROM OM_STUDENT

SELECT CID AS COURSE, MAX(SCORE) AS HIGHEST_SCORE FROM OM_STUDENT GROUP BY CID 

--7	DISPLAY STUDNETNAME, AND COURSE THEY HAVE TAKEN?							

SELECT SNAME, CID AS COURSE FROM OM_STUDENT

--8	DISPLAY NAME OF TEACHER WHO HAVE TOUGHT MORE THAN 8 YEARS						

SELECT TNAME, DATEDIFF(yy,CONVERT(DATETIME, JOB_START_DT),GETDATE()) AS TOUGHT_YEAR,JOB_START_DT
FROM OM_TEACHER WHERE DATEDIFF(yy,CONVERT(DATETIME, JOB_START_DT),GETDATE())>8

--9	DISPLAY DAY (SUNDAY, MONDAY...) STUDENT WERE BORN

SELECT SNAME, DATENAME(DW,DOB) AS BORN_DAY FROM OM_STUDENT

--10	DISPLAY THOSE NAME WHOSE STUDENT AND TEACHER NAME IS SAME
						
SELECT OM_STUDENT.SNAME, OM_TEACHER.TNAME
FROM OM_STUDENT
JOIN OM_TEACHER ON OM_STUDENT.SNAME = OM_TEACHER.TNAME

--11	DISPLAY LIST OF STUDENT NAME WHO HAVE TAKEN CLASS UNDER WHICH TEACHER

SELECT SNAME, TNAME FROM OM_STUDENT O JOIN OM_TEACHER OM ON O.CID=OM.CID


SELECT * FROM OM_STUDENT
SELECT * FROM OM_TEACHER	
						
--12	DISPLAY NAME OF STUDENT WHO HAVE TAKEN COURSE DURATION_MONTH GREATER THAN 5 MONTH.

SELECT SNAME,DURATION_MONTH FROM OM_STUDENT O JOIN OM_COURSE OM ON O.CID=OM.CID WHERE DURATION_MONTH>5

							
--13	DISPLAY NAME OF STUDENT IN THIS FORMAT (EX: RAM THAPA NEED TO DISPLAY rAM tHAPA)
	
SELECT CONCAT(Substring(LOWER((SUBSTRING(SNAME, 1, CHARINDEX(' ', SNAME) - 1))), 1, 1), 
Substring(UPPER((SUBSTRING(SNAME, 1, CHARINDEX(' ', SNAME) - 1))), 2,15))AS FIRSTNAME,
CONCAT(Substring(LOWER((SUBSTRING(SNAME, CHARINDEX(' ', SNAME) + 1, 15))), 1, 1), 
Substring(UPPER((SUBSTRING(SNAME, CHARINDEX(' ', SNAME) + 1, 15))), 2, 15)) AS LASTNAME 
FROM OM_STUDENT

--14	DISPLAY NUMBER OF STUDENT BASE ON LASTNAME 
	
SELECT REVERSE(SUBSTRING(REVERSE(SNAME), 1, CHARINDEX(' ', REVERSE(SNAME)) - 1)) AS LastName
FROM OM_STUDENT


--16	DISPLAY OLDEST STUDENT IN EACH COURSE

SELECT SNAME,DOB, CID FROM OM_STUDENT
WHERE DOB = (SELECT MAX(DOB) FROM OM_STUDENT) 

--17	DISPLAY 3 AND 7 THE OLDEST TEACHER 	

SELECT TNAME, DOB FROM OM_TEACHER GROUP BY DOB

SELECT TNAME, ROW_NUMBER()OVER(PARTITION BY TNAME ORDER BY SCORE) FROM OM_STUDENT
SELECT * FROM OM_TEACHER 

--18	DISPLAY MOST EXPENSIVE AND MOST CHEAP COURSE

SELECT CID , FEE FROM OM_COURSE ORDER BY FEE DESC
							
--19	DISPLAY LIST OF STUDNET WHO TOOK MOST EXPENSIVE COURSE	

SELECT SNAME,FEE FROM OM_COURSE O INNER JOIN OM_STUDENT OM ON O.CID=OM.CID ORDER BY FEE DESC
SELECT MAX(FEE) FEE, MAX(CID) COURSE FROM OM_COURSE

SELECT * FROM OM_COURSE
SELECT * FROM OM_STUDENT	

--20	DISPLAY LIST OF STUDENT WHO GOT HIGHEST SCORE IN MOST CHEAP COURSE	

SELECT SNAME, SCORE, ROW_NUMBER()OVER(PARTITION BY SNAME ORDER BY SCORE ) FROM OM_STUDENT

SELECT SNAME, SCORE, FEE FROM OM_STUDENT O INNER JOIN OM_COURSE OM ON O.CID=OM.CID
WHERE SCORE>=(SELECT MAX(SCORE), MIN(FEE) 


--21	DISPLAY TEACHER NAME AND STUDENT NAME, WHOSE LAST NAME START WITH "S"	

SELECT REVERSE(SUBSTRING(REVERSE(SNAME), 1, CHARINDEX(' ', REVERSE(SNAME)) - 1)) AS LastName
FROM OM_STUDENT O INNER JOIN OM_TEACHER OM ON O.CID=OM.CID 
WHERE 
REVERSE(SUBSTRING(REVERSE(SNAME), 1, CHARINDEX(' ', REVERSE(SNAME)) - 1)) LIKE 'S%'



--1	DISPLAY HOW MANY ARE MALE AND HOW MANY ARE FEMALE STUDENT?	

SELECT * FROM OM_STUDENT

SELECT GENDER,
COUNT(CASE WHEN GENDER='M' THEN 1  END) AS MALE,
COUNT(CASE WHEN GENDER='F' THEN 1  END) AS FEMALE,
COUNT(*) AS TOTAL
FROM OM_STUDENT GROUP BY GENDER

--2	DISPLAY STUDENTNAME, AGE OF STUDENT

SELECT SNAME, 		
DATEDIFF(YY,DOB,GETDATE()) AS AGE_OF_STUDENT
FROM OM_STUDENT

--3	COUNT NUMBER OF STUDENT IN EACH COURSE FROM STUDENT TABLE?	

SELECT * FROM OM_STUDENT
SELECT CID AS EACH_COURSE, COUNT(SNAME) AS NO_OF_STUDENT FROM OM_STUDENT GROUP BY CID

--4	COUNT NUMBER OF STUDENT BASE ON CITY?	
SELECT CITY, COUNT(SNAME) AS NO_OF_STUDENT FROM OM_STUDENT GROUP BY CITY

--5	COUNT NUMBER OF STUDNET BASE ON CITY AND GENDER?
SELECT CITY, GENDER, COUNT(SNAME) AS NO_OF_STUDENT FROM OM_STUDENT GROUP BY CITY,GENDER

--6	DISPLAY HIGHEST SCORE IN EACH COURSE?	

SELECT * FROM OM_STUDENT

SELECT CID AS COURSE, MAX(SCORE) AS HIGHEST_SCORE FROM OM_STUDENT GROUP BY CID 

--7	DISPLAY STUDNETNAME, AND COURSE THEY HAVE TAKEN?							

SELECT SNAME, CID AS COURSE FROM OM_STUDENT

--8	DISPLAY NAME OF TEACHER WHO HAVE TOUGHT MORE THAN 8 YEARS						

SELECT TNAME, DATEDIFF(yy,CONVERT(DATETIME, JOB_START_DT),GETDATE()) AS TOUGHT_YEAR,JOB_START_DT
FROM OM_TEACHER WHERE DATEDIFF(yy,CONVERT(DATETIME, JOB_START_DT),GETDATE())>8

--9	DISPLAY DAY (SUNDAY, MONDAY...) STUDENT WERE BORN

SELECT SNAME, DATENAME(DW,DOB) AS BORN_DAY FROM OM_STUDENT

--10	DISPLAY THOSE NAME WHOSE STUDENT AND TEACHER NAME IS SAME
						
SELECT OM_STUDENT.SNAME, OM_TEACHER.TNAME
FROM OM_STUDENT
JOIN OM_TEACHER ON OM_STUDENT.SNAME = OM_TEACHER.TNAME

--11	DISPLAY LIST OF STUDENT NAME WHO HAVE TAKEN CLASS UNDER WHICH TEACHER

SELECT SNAME, TNAME FROM OM_STUDENT O JOIN OM_TEACHER OM ON O.CID=OM.CID


SELECT * FROM OM_STUDENT
SELECT * FROM OM_TEACHER	
						
--12	DISPLAY NAME OF STUDENT WHO HAVE TAKEN COURSE DURATION_MONTH GREATER THAN 5 MONTH.

SELECT SNAME,DURATION_MONTH FROM OM_STUDENT O JOIN OM_COURSE OM ON O.CID=OM.CID WHERE DURATION_MONTH>5

							
--13	DISPLAY NAME OF STUDENT IN THIS FORMAT (EX: RAM THAPA NEED TO DISPLAY rAM tHAPA)
	
SELECT CONCAT(Substring(LOWER((SUBSTRING(SNAME, 1, CHARINDEX(' ', SNAME) - 1))), 1, 1), 
Substring(UPPER((SUBSTRING(SNAME, 1, CHARINDEX(' ', SNAME) - 1))), 2,15))AS FIRSTNAME,
CONCAT(Substring(LOWER((SUBSTRING(SNAME, CHARINDEX(' ', SNAME) + 1, 15))), 1, 1), 
Substring(UPPER((SUBSTRING(SNAME, CHARINDEX(' ', SNAME) + 1, 15))), 2, 15)) AS LASTNAME 
FROM OM_STUDENT

--14	DISPLAY NUMBER OF STUDENT BASE ON LASTNAME 
	
SELECT REVERSE(SUBSTRING(REVERSE(SNAME), 1, CHARINDEX(' ', REVERSE(SNAME)) - 1)) AS LastName
FROM OM_STUDENT


--16	DISPLAY OLDEST STUDENT IN EACH COURSE

SELECT SNAME,DOB, CID FROM OM_STUDENT
WHERE DOB = (SELECT MAX(DOB) FROM OM_STUDENT) 

--17	DISPLAY 3 AND 7 THE OLDEST TEACHER 	

SELECT TNAME, DOB FROM OM_TEACHER GROUP BY DOB

SELECT TNAME, ROW_NUMBER()OVER(PARTITION BY TNAME ORDER BY SCORE) FROM OM_STUDENT
SELECT * FROM OM_TEACHER 

--18	DISPLAY MOST EXPENSIVE AND MOST CHEAP COURSE

SELECT CID , FEE FROM OM_COURSE ORDER BY FEE DESC
							
--19	DISPLAY LIST OF STUDNET WHO TOOK MOST EXPENSIVE COURSE	

SELECT SNAME,FEE FROM OM_COURSE O INNER JOIN OM_STUDENT OM ON O.CID=OM.CID ORDER BY FEE DESC
SELECT MAX(FEE) FEE, MAX(CID) COURSE FROM OM_COURSE

SELECT * FROM OM_COURSE
SELECT * FROM OM_STUDENT	

--20	DISPLAY LIST OF STUDENT WHO GOT HIGHEST SCORE IN MOST CHEAP COURSE	

SELECT SNAME, SCORE, ROW_NUMBER()OVER(PARTITION BY SNAME ORDER BY SCORE ) FROM OM_STUDENT

SELECT SNAME, SCORE, FEE FROM OM_STUDENT O INNER JOIN OM_COURSE OM ON O.CID=OM.CID
WHERE SCORE>=(SELECT MAX(SCORE), MIN(FEE) 


--21	DISPLAY TEACHER NAME AND STUDENT NAME, WHOSE LAST NAME START WITH "S"	

SELECT REVERSE(SUBSTRING(REVERSE(SNAME), 1, CHARINDEX(' ', REVERSE(SNAME)) - 1)) AS LastName
FROM OM_STUDENT O INNER JOIN OM_TEACHER OM ON O.CID=OM.CID 
WHERE 
REVERSE(SUBSTRING(REVERSE(SNAME), 1, CHARINDEX(' ', REVERSE(SNAME)) - 1)) LIKE 'S%'


